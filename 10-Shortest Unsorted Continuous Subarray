class Solution {
public:
    int findUnsortedSubarray(vector<int>& nums) {
      
       /* deque<int> q;
        vector<int> v(nums.size());
        v=nums;// [2,6,4,8,10,9,15]
        int c=0;//[2,4,6,8,9,10,15]
        sort(v.begin(),v.end());//[2,4,6,8,9,10,15]
        for(int i=0;i<v.size();i++){
            if(v[i]!=nums[i])
                q.push_back(i);//1 2 4 5
        }
        if(q.empty())
            return 0;
        return q.back()-q.front()+1;//5-1+1*/
        
        ///WITHOUT USING EXTRA SPACE
        
        int n=nums.size();
        
        int s=-1,e=-1;
        
        int mx=INT_MIN,mn=INT_MAX;
        
        for(int i=0;i<n;i++)
        {
            mx=max(mx,nums[i]);
                if(mx>nums[i])
                    e=i;
        }
          for(int i=n-1;i>=0;i--)
        {
            mn=min(mn,nums[i]);
                if(mn<nums[i])
                    s=i;
        }
        if(s==e) return 0;
        return e-s+1;
    }
};
